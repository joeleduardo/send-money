// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`Chart component 1`] = `
ShallowWrapper {
  Symbol(enzyme.__root__): [Circular],
  Symbol(enzyme.__unrendered__): <chartComponent
    chartData={
        Array [
            0,
            5000,
          ]
    }
    chartLabels={
        Array [
            "Total sent",
            "Left available",
          ]
    }
/>,
  Symbol(enzyme.__renderer__): Object {
    "batchedUpdates": [Function],
    "getNode": [Function],
    "render": [Function],
    "simulateError": [Function],
    "simulateEvent": [Function],
    "unmount": [Function],
  },
  Symbol(enzyme.__node__): Object {
    "instance": null,
    "key": undefined,
    "nodeType": "host",
    "props": Object {
      "children": Array [
        <div
          className="amounts"
>
          £ 
          0
          <span>
                    Total sent
          </span>
</div>,
        <Doughnut
          data={
                    Object {
                              "datasets": Array [
                                Object {
                                  "backgroundColor": Array [
                                    "#ffb427",
                                    "#cccccc",
                                  ],
                                  "data": Array [
                                    0,
                                    5000,
                                  ],
                                },
                              ],
                              "labels": Array [
                                "Total sent",
                                "Left available",
                              ],
                            }
          }
          options={
                    Object {
                              "legend": Object {
                                "display": false,
                              },
                              "responsive": false,
                            }
          }
          width={180}
/>,
        <div
          className="amounts"
>
          £ 
          5,000
          <span>
                    Left available
          </span>
</div>,
      ],
      "className": "status",
    },
    "ref": null,
    "rendered": Array [
      Object {
        "instance": null,
        "key": undefined,
        "nodeType": "host",
        "props": Object {
          "children": Array [
            "£ ",
            "0",
            <span>
              Total sent
</span>,
          ],
          "className": "amounts",
        },
        "ref": null,
        "rendered": Array [
          "£ ",
          "0",
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "host",
            "props": Object {
              "children": "Total sent",
            },
            "ref": null,
            "rendered": "Total sent",
            "type": "span",
          },
        ],
        "type": "div",
      },
      Object {
        "instance": null,
        "key": undefined,
        "nodeType": "class",
        "props": Object {
          "data": Object {
            "datasets": Array [
              Object {
                "backgroundColor": Array [
                  "#ffb427",
                  "#cccccc",
                ],
                "data": Array [
                  0,
                  5000,
                ],
              },
            ],
            "labels": Array [
              "Total sent",
              "Left available",
            ],
          },
          "options": Object {
            "legend": Object {
              "display": false,
            },
            "responsive": false,
          },
          "width": 180,
        },
        "ref": null,
        "rendered": null,
        "type": [Function],
      },
      Object {
        "instance": null,
        "key": undefined,
        "nodeType": "host",
        "props": Object {
          "children": Array [
            "£ ",
            "5,000",
            <span>
              Left available
</span>,
          ],
          "className": "amounts",
        },
        "ref": null,
        "rendered": Array [
          "£ ",
          "5,000",
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "host",
            "props": Object {
              "children": "Left available",
            },
            "ref": null,
            "rendered": "Left available",
            "type": "span",
          },
        ],
        "type": "div",
      },
    ],
    "type": "div",
  },
  Symbol(enzyme.__nodes__): Array [
    Object {
      "instance": null,
      "key": undefined,
      "nodeType": "host",
      "props": Object {
        "children": Array [
          <div
            className="amounts"
>
            £ 
            0
            <span>
                        Total sent
            </span>
</div>,
          <Doughnut
            data={
                        Object {
                                    "datasets": Array [
                                      Object {
                                        "backgroundColor": Array [
                                          "#ffb427",
                                          "#cccccc",
                                        ],
                                        "data": Array [
                                          0,
                                          5000,
                                        ],
                                      },
                                    ],
                                    "labels": Array [
                                      "Total sent",
                                      "Left available",
                                    ],
                                  }
            }
            options={
                        Object {
                                    "legend": Object {
                                      "display": false,
                                    },
                                    "responsive": false,
                                  }
            }
            width={180}
/>,
          <div
            className="amounts"
>
            £ 
            5,000
            <span>
                        Left available
            </span>
</div>,
        ],
        "className": "status",
      },
      "ref": null,
      "rendered": Array [
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "host",
          "props": Object {
            "children": Array [
              "£ ",
              "0",
              <span>
                Total sent
</span>,
            ],
            "className": "amounts",
          },
          "ref": null,
          "rendered": Array [
            "£ ",
            "0",
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "host",
              "props": Object {
                "children": "Total sent",
              },
              "ref": null,
              "rendered": "Total sent",
              "type": "span",
            },
          ],
          "type": "div",
        },
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "class",
          "props": Object {
            "data": Object {
              "datasets": Array [
                Object {
                  "backgroundColor": Array [
                    "#ffb427",
                    "#cccccc",
                  ],
                  "data": Array [
                    0,
                    5000,
                  ],
                },
              ],
              "labels": Array [
                "Total sent",
                "Left available",
              ],
            },
            "options": Object {
              "legend": Object {
                "display": false,
              },
              "responsive": false,
            },
            "width": 180,
          },
          "ref": null,
          "rendered": null,
          "type": [Function],
        },
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "host",
          "props": Object {
            "children": Array [
              "£ ",
              "5,000",
              <span>
                Left available
</span>,
            ],
            "className": "amounts",
          },
          "ref": null,
          "rendered": Array [
            "£ ",
            "5,000",
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "host",
              "props": Object {
                "children": "Left available",
              },
              "ref": null,
              "rendered": "Left available",
              "type": "span",
            },
          ],
          "type": "div",
        },
      ],
      "type": "div",
    },
  ],
  Symbol(enzyme.__options__): Object {
    "adapter": ReactSixteenAdapter {
      "options": Object {
        "enableComponentDidUpdateOnSetState": true,
        "lifecycles": Object {
          "componentDidUpdate": Object {
            "onSetState": true,
          },
          "getDerivedStateFromProps": true,
          "getSnapshotBeforeUpdate": true,
          "setState": Object {
            "skipsComponentDidUpdateOnNullish": true,
          },
        },
      },
    },
    "attachTo": undefined,
    "hydrateIn": undefined,
  },
}
`;

exports[`Chart component 2`] = `
ShallowWrapper {
  Symbol(enzyme.__root__): [Circular],
  Symbol(enzyme.__unrendered__): <chartComponent
    chartData={
        Array [
            100,
            4900,
          ]
    }
    chartLabels={
        Array [
            "Total sent",
            "Left available",
          ]
    }
/>,
  Symbol(enzyme.__renderer__): Object {
    "batchedUpdates": [Function],
    "getNode": [Function],
    "render": [Function],
    "simulateError": [Function],
    "simulateEvent": [Function],
    "unmount": [Function],
  },
  Symbol(enzyme.__node__): Object {
    "instance": null,
    "key": undefined,
    "nodeType": "host",
    "props": Object {
      "children": Array [
        <div
          className="amounts"
>
          £ 
          100
          <span>
                    Total sent
          </span>
</div>,
        <Doughnut
          data={
                    Object {
                              "datasets": Array [
                                Object {
                                  "backgroundColor": Array [
                                    "#ffb427",
                                    "#cccccc",
                                  ],
                                  "data": Array [
                                    100,
                                    4900,
                                  ],
                                },
                              ],
                              "labels": Array [
                                "Total sent",
                                "Left available",
                              ],
                            }
          }
          options={
                    Object {
                              "legend": Object {
                                "display": false,
                              },
                              "responsive": false,
                            }
          }
          width={180}
/>,
        <div
          className="amounts"
>
          £ 
          4,900
          <span>
                    Left available
          </span>
</div>,
      ],
      "className": "status",
    },
    "ref": null,
    "rendered": Array [
      Object {
        "instance": null,
        "key": undefined,
        "nodeType": "host",
        "props": Object {
          "children": Array [
            "£ ",
            "100",
            <span>
              Total sent
</span>,
          ],
          "className": "amounts",
        },
        "ref": null,
        "rendered": Array [
          "£ ",
          "100",
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "host",
            "props": Object {
              "children": "Total sent",
            },
            "ref": null,
            "rendered": "Total sent",
            "type": "span",
          },
        ],
        "type": "div",
      },
      Object {
        "instance": null,
        "key": undefined,
        "nodeType": "class",
        "props": Object {
          "data": Object {
            "datasets": Array [
              Object {
                "backgroundColor": Array [
                  "#ffb427",
                  "#cccccc",
                ],
                "data": Array [
                  100,
                  4900,
                ],
              },
            ],
            "labels": Array [
              "Total sent",
              "Left available",
            ],
          },
          "options": Object {
            "legend": Object {
              "display": false,
            },
            "responsive": false,
          },
          "width": 180,
        },
        "ref": null,
        "rendered": null,
        "type": [Function],
      },
      Object {
        "instance": null,
        "key": undefined,
        "nodeType": "host",
        "props": Object {
          "children": Array [
            "£ ",
            "4,900",
            <span>
              Left available
</span>,
          ],
          "className": "amounts",
        },
        "ref": null,
        "rendered": Array [
          "£ ",
          "4,900",
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "host",
            "props": Object {
              "children": "Left available",
            },
            "ref": null,
            "rendered": "Left available",
            "type": "span",
          },
        ],
        "type": "div",
      },
    ],
    "type": "div",
  },
  Symbol(enzyme.__nodes__): Array [
    Object {
      "instance": null,
      "key": undefined,
      "nodeType": "host",
      "props": Object {
        "children": Array [
          <div
            className="amounts"
>
            £ 
            100
            <span>
                        Total sent
            </span>
</div>,
          <Doughnut
            data={
                        Object {
                                    "datasets": Array [
                                      Object {
                                        "backgroundColor": Array [
                                          "#ffb427",
                                          "#cccccc",
                                        ],
                                        "data": Array [
                                          100,
                                          4900,
                                        ],
                                      },
                                    ],
                                    "labels": Array [
                                      "Total sent",
                                      "Left available",
                                    ],
                                  }
            }
            options={
                        Object {
                                    "legend": Object {
                                      "display": false,
                                    },
                                    "responsive": false,
                                  }
            }
            width={180}
/>,
          <div
            className="amounts"
>
            £ 
            4,900
            <span>
                        Left available
            </span>
</div>,
        ],
        "className": "status",
      },
      "ref": null,
      "rendered": Array [
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "host",
          "props": Object {
            "children": Array [
              "£ ",
              "100",
              <span>
                Total sent
</span>,
            ],
            "className": "amounts",
          },
          "ref": null,
          "rendered": Array [
            "£ ",
            "100",
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "host",
              "props": Object {
                "children": "Total sent",
              },
              "ref": null,
              "rendered": "Total sent",
              "type": "span",
            },
          ],
          "type": "div",
        },
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "class",
          "props": Object {
            "data": Object {
              "datasets": Array [
                Object {
                  "backgroundColor": Array [
                    "#ffb427",
                    "#cccccc",
                  ],
                  "data": Array [
                    100,
                    4900,
                  ],
                },
              ],
              "labels": Array [
                "Total sent",
                "Left available",
              ],
            },
            "options": Object {
              "legend": Object {
                "display": false,
              },
              "responsive": false,
            },
            "width": 180,
          },
          "ref": null,
          "rendered": null,
          "type": [Function],
        },
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "host",
          "props": Object {
            "children": Array [
              "£ ",
              "4,900",
              <span>
                Left available
</span>,
            ],
            "className": "amounts",
          },
          "ref": null,
          "rendered": Array [
            "£ ",
            "4,900",
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "host",
              "props": Object {
                "children": "Left available",
              },
              "ref": null,
              "rendered": "Left available",
              "type": "span",
            },
          ],
          "type": "div",
        },
      ],
      "type": "div",
    },
  ],
  Symbol(enzyme.__options__): Object {
    "adapter": ReactSixteenAdapter {
      "options": Object {
        "enableComponentDidUpdateOnSetState": true,
        "lifecycles": Object {
          "componentDidUpdate": Object {
            "onSetState": true,
          },
          "getDerivedStateFromProps": true,
          "getSnapshotBeforeUpdate": true,
          "setState": Object {
            "skipsComponentDidUpdateOnNullish": true,
          },
        },
      },
    },
    "attachTo": undefined,
    "hydrateIn": undefined,
  },
}
`;
